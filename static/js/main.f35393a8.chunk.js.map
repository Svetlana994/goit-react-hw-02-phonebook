{"version":3,"sources":["components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Contacts/Contacts.styles.jsx","components/Contacts/Contacts.jsx","components/InputName/InputName.styles.jsx","components/InputName/InputName.jsx","components/InputNumber/InputNumber.styles.jsx","components/InputNumber/InputNumber.jsx","components/Form/Form.styles.jsx","components/Form/Form.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["Container","Title","Section","title","children","ContactItem","BtnDelete","BtnText","NumberText","Contacts","options","onDelete","map","id","name","number","size","type","onClick","Input","InputTitle","InputName","value","onChangeInput","pattern","required","onChange","InputNumber","WrapperForm","BtnAdd","Form","state","handleInputChange","event","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","Component","ContactTitle","InputFind","Filter","App","contacts","filter","formSubmitHandler","data","find","contact","toLowerCase","alert","prevState","uuidv4","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f35393a8.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\nwidth: 500px;\nmargin: 0 auto;\n`;\n\nexport const Title = styled.h2`\nmargin-bottom: 20px;\ntext-align: center;\ncolor: #2d2b2b;\n`;","import PropTypes from 'prop-types';\nimport { Container, Title } from './Section.styles';\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        {children}\n    </Container>\n)\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;","import styled from '@emotion/styled/macro';\n\nexport const ContactItem = styled.li`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nmargin-bottom: 10px;\nlist-style: none;\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n&:hover {\n    color: #3561d0;\n}\n`;\n\nexport const BtnDelete = styled.button`\ndisplay: inline-flex;\nalign-items: center;\npadding: 5px;\nborder-color: transparent;\nborder-radius: 5px;\nbackground-color: #c7cace;\ntext-transform: uppercase;\ncursor: pointer;\n\n&:hover {\n    background-color: #3561d0;\n    color: #fff;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n`; \n\nexport const BtnText = styled.span`\nmargin-right: 5px;\n`;\n\nexport const NumberText = styled.span`\nmargin-right: 30px;\nmargin-left: 10px\n`;","import { ContactItem, BtnText, BtnDelete, NumberText } from './Contacts.styles';\nimport PropTypes from 'prop-types';\nimport { BsFillPersonDashFill } from 'react-icons/bs';\nimport { BiWinkSmile } from 'react-icons/bi';\n\nconst Contacts = ({ options, onDelete }) => (\n    <ul>\n        {options.map(({id, name, number}) => {\n            return (<ContactItem key={id}>\n                <BiWinkSmile size={18}/>\n                {name}:\n                <NumberText>{number}</NumberText>\n                <BtnDelete type=\"button\" onClick={() => onDelete(id)}>\n                    <BtnText>Delete</BtnText>\n                    <BsFillPersonDashFill size={16}/>\n                    </BtnDelete>\n            </ContactItem>)\n        })}\n        \n    </ul>\n)\n\nContacts.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }),\n    ),\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default Contacts;","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\nmargin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\nborder-color: #a29f9f;\nborder-radius: 5px;\n\n&:hover {\n    border-color: #0741d3;\n}\n`;\n\nexport const InputTitle = styled.p`\nmargin-bottom: 10px;\n`;","import { Container, Input, InputTitle } from './InputName.styles';\nimport PropTypes from 'prop-types';\n\nconst InputName = ({ value, onChangeInput }) => (\n    <Container>\n        <label>\n            <InputTitle>Name</InputTitle>\n            <Input\n  type=\"text\"\n            name=\"name\"\n            value={value}\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={onChangeInput}\n            />\n            </label>\n    </Container>\n)\n\nInputName.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChangeInput: PropTypes.func.isRequired\n};\n\nexport default InputName;","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\nmargin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\nborder-color: #a29f9f;\nborder-radius: 5px;\n\n&:hover {\n    border-color: #0741d3;\n}\n`;\n\nexport const InputTitle = styled.p`\nmargin-bottom: 10px;\n`;","import { Container, Input, InputTitle } from './InputNumber.styles';\nimport PropTypes from 'prop-types';\n\nconst InputNumber = ({value, onChangeInput }) => (\n    <Container>\n        <label>\n            <InputTitle>Number</InputTitle>\n            <Input\n  type=\"tel\"\n            name=\"number\"\n            value={value}\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={onChangeInput}\n            />\n            </label>\n    </Container>\n)\n\nInputNumber.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChangeInput: PropTypes.func.isRequired\n};\n\nexport default InputNumber;","import styled from '@emotion/styled/macro';\n\nexport const WrapperForm = styled.div`\nmargin-bottom: 20px;\npadding: 20px;\nbox-shadow: 0px 1px 5px 1px rgba(34, 60, 80, 0.4);\n`;\n\nexport const BtnAdd = styled.button`\ndisplay: flex;\nalign-items: center;\npadding: 7px;\nborder-color: transparent;\nborder-radius: 5px;\nbackground-color: #c7cace;\ntext-transform: uppercase;\ntransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\n\n&:hover {\n    background-color: #3561d0;\n    color: #fff;\n}\n`;\n\nexport const BtnText = styled.span`\nmargin-right: 5px;\n`;","import { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport InputName from '../InputName/InputName';\nimport InputNumber from '../InputNumber/InputNumber';\nimport { WrapperForm, BtnAdd, BtnText } from './Form.styles';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\n\n\nclass Form extends Component {\n\n    state = {\n        name: '',\n        number: ''\n    }\n\nhandleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value\n    })\n    }\n    \nhandleSubmit = (event) => {\n    event.preventDefault();\n\n  this.props.onSubmit(this.state);\n\n  this.resetForm();\n  }\n\nresetForm = () => {\n    this.setState({ name: '', number: '' });\n  }\n\n    render() {\n        return (\n        <WrapperForm>\n            <form onSubmit={this.handleSubmit}>\n                <InputName\n            value={this.state.name}\n            onChangeInput={this.handleInputChange}\n            />\n            <InputNumber\n            value={this.state.number}\n            onChangeInput={this.handleInputChange}\n          />\n\n            <BtnAdd\n                type=\"submit\"\n                    ><BtnText>Add contact</BtnText>\n            <BsFillPersonPlusFill size={16}/>\n            </BtnAdd>\n            </form>\n        </WrapperForm> \n        )\n    }\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n\nexport default Form;","import styled from '@emotion/styled/macro';\n\nexport const ContactTitle = styled.h3`\nmargin-bottom: 10px;\n`;\n\nexport const InputFind = styled.input`\nmargin-bottom: 20px;\nborder-color: #a29f9f;\nborder-radius: 5px;\n\n&:hover {\n    border-color: #0741d3;\n}\n`;","import { ContactTitle, InputFind } from './Filter.styles';\nimport PropTypes from 'prop-types';\n\nfunction Filter({value, onChange}) {\n    return (\n        <div>\n            <ContactTitle>Find contacts by name</ContactTitle> \n            <InputFind\n                type=\"text\"\n                value={value}\n                onChange={onChange}\n            />\n        </div>\n    )\n}\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default Filter;\n","import { Component } from \"react\";\nimport Section from './components/Section/Section';\nimport Contacts from './components/Contacts/Contacts';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nclass App extends Component {\n\n  state = {\n    contacts: [],\n    filter: '',\n  }\n\n\n  formSubmitHandler = (data) => {\n\n    const { contacts } = this.state;\n\n    if (contacts.find(contact =>\n      data.name.toLowerCase() === contact.name.toLowerCase())) {\n      alert(`${data.name} is already in contacts.`);\n    } else {\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, { ...data, id: uuidv4(), }]\n        }\n      });\n    }\n  }\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  }\n\n  getVisibleContacts = () => {\n\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter));\n  }\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n  contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n}))\n  }\n  \n  render() {\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form onSubmit={this.formSubmitHandler} />\n        </Section>\n        \n        <Section title=\"Contacts\">\n          <Filter value={this.state.filter} onChange={this.changeFilter}/>\n          <Contacts options={visibleContacts} onDelete={this.deleteContact}></Contacts>\n        </Section>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}